#####################################################################
# Hooks
#####################################################################
[gcode_macro _hook_variables]
variable_is_idle: False
gcode:

[delayed_gcode hook_boot]
initial_duration: 1
gcode:
    PRINT_BOOT
    PRINT_READY

[idle_timeout]
gcode:
    PRINT_IDLE
    SET_GCODE_VARIABLE MACRO=_hook_variables VARIABLE=is_idle VALUE=True
    UPDATE_DELAYED_GCODE ID=hook_idle_tick DURATION=1
timeout: 1800

[gcode_macro hook_on_wake]
gcode:
    M118 hook_on_wake
    M118 {printer.idle_timeout.state}
    UPDATE_DELAYED_GCODE ID=hook_idle_tick DURATION=0

    {% if printer["gcode_macro _hook_variables"].is_idle %}
        SET_GCODE_VARIABLE MACRO=_hook_variables VARIABLE=is_idle VALUE=False

        # {% if printer.idle_timeout.state != "Printing" %}
            PRINT_READY
        # {% endif %}
    {% endif %}

[delayed_gcode hook_idle_tick]
gcode:
    # M118 hook_idle_tick
    {% if printer["gcode_macro _hook_variables"].is_idle and printer.idle_timeout.state != "Idle" %}
        hook_on_wake
    {% else %}
        UPDATE_DELAYED_GCODE ID=hook_idle_tick DURATION=1
    {% endif %}

# For Cura, must add "Search And Replace" script
# Search: ;LAYER:(\d+)
# Replace: BEFORE_LAYER_CHANGE LAYER=\1\n;LAYER:\1
# Use Regex: True
[gcode_macro BEFORE_LAYER_CHANGE]
gcode:
    PRINT_LAYER_CHANGE LAYER={params.LAYER}


#####################################################################
# Lifecycle (BOOT > READY > START > LAYER_CHANGE > END > IDLE 1 sec) > READY)
#####################################################################
[gcode_macro PRINT_BOOT]
gcode:
    LIGHT_ON

[gcode_macro PRINT_READY]
gcode:
    SCREEN_ON
    STATUS_READY
    M118 PRINT_READY

[gcode_macro PRINT_IDLE]
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0
    # SET_FAN_SPEED FAN=exhaust_fan SPEED=0

    SCREEN_OFF
    STATUS_OFF
    M18 ;disable all steppers    
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=z_level VALUE=0

[gcode_macro PRINT_START]
variable_z_level: 0 # 0 => pending, 1 => calibrated
variable_calibrate_z_offset: 0
gcode:
    M118 PRINT_START
    M118 {printer.idle_timeout.state}

    ; reset
    M220 S100

    {% if not params.BED %}
        { action_raise_error("Please set PRINT_START params.BED first!") }
        M117 Please set PRINT_START params.BED first!
    {% endif %}

    {% if not params.EXTRUDER %}
        { action_raise_error("Please set PRINT_START params.EXTRUDER first!") }
        M117 Please set PRINT_START params.EXTRUDER first!
    {% endif %}

    G90 ; Use absolute coordinates
    SET_GCODE_OFFSET Z=0 ; reset z offset
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1

    {% if params.CHAMBER %}
        SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber_fan target={params.CHAMBER}
    {% else %}
        SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber_fan target=0
    {% endif %}

    STATUS_HEATING

    # Set for bed to reach temperature
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.BED}

    # Start extruder preheating
    {% set extruder_preheating = (params.EXTRUDER | float) * 0.8 %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_preheating}

    # Wait for bed to reach temperature
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={(params.BED | float) * 0.9}


    {% if z_level != 1 or not printer.quad_gantry_level.applied %}
        G32 ; home all axes
    {% endif %}

    {% if z_level != 1 or calibrate_z_offset == 0 %}
        # Waiting for preheating
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_preheating}
        G28 Z

        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.EXTRUDER}
        SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=enable_purge VALUE=False
        clean_nozzle
        CALIBRATE_Z
        REGISTER_Z_OFFSET
    {% else %}
        SET_GCODE_OFFSET Z={calibrate_z_offset}
    {% endif %}
    
    PLATE_READY BED={params.BED}
    # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=z_level VALUE=1

    STATUS_HEATING
    # Set and wait to reach temperature
    M190 S{params.BED}
    M109 S{params.EXTRUDER}

    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=enable_purge VALUE=True
    clean_nozzle

    STATUS_PRINTING
    {% if params.AREA_START %}
        MOVE_TO_POINT POINT={params.AREA_START}
    {% else %}
        CENTER
    {% endif %}


[gcode_macro PRINT_LAYER_CHANGE]
gcode:

[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    # G0  X290 Y290 F3600            ; park nozzle at rear
    PARK_TO_BUCKET
    BED_MESH_CLEAR

    STATUS_OFF
