[include kiauh_macros.cfg]
[include hardware.cfg]

[virtual_sdcard]
path: ~/gcode_files

[printer]
max_velocity: 300
max_accel: 2500
max_z_accel: 350


#####################################################################
# Stepper Settings
#####################################################################
[stepper_x]
position_endstop: 300
position_max: 300
position_min: 0
homing_speed: 50   # Max 100
homing_retract_dist: 5
homing_positive_dir: true

[stepper_y]
position_min: 0
position_endstop: 305
position_max: 305
homing_speed: 50  # Max 100
homing_retract_dist: 5
homing_positive_dir: true

[stepper_z]
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0
position_max: 290
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3


#####################################################################
# Extruder
#####################################################################
[extruder]
min_extrude_temp: 175
# https://www.klipper3d.org/Pressure_Advance.html
# 1. SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
# 2. TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
# 3. Print square_tower.stl
# 4. pressure_advance = 0 + <measured_height> * 0.005
# eSUN ABS+ (Red)
# pressure_advance: 0.0535
# 兰度 PLA (white)
# pressure_advance: 0.04


#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################
# [safe_z_home]
# ##	XY Location of the Z Endstop Switch
# ##	Update -10,-10 to the XY coordinates of your endstop pin 
# ##	(such as 157,305) after going through Z Endstop Pin
# ##	Location Definition step.
# home_xy_position: 95,301
# speed: 100
# z_hop: 10

[quad_gantry_level]
gantry_corners:
	-60,-10
	360,370
points:
    38,19
    38,243
    262,243
    262,19
	# mesh_x - 0, mesh_y - 19.0

speed: 100
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.02
max_adjust: 50

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 38,38
mesh_max: 262,262
probe_count: 15,15             # odd number
algorithm: bicubic
relative_reference_index: 112  # index = (count_x * count_y - 1) / 2


#####################################################################
# Mods
#####################################################################
[include mod.nozzle_scrub.cfg]
[include mod.klicky-probe.cfg]
[include mod.z_calibration.cfg]



#####################################################################
# Hooks
#####################################################################
[delayed_gcode hook_boot]
initial_duration: 1
gcode:
    PRINT_BOOT
    PRINT_READY

[idle_timeout]
gcode:
    PRINT_IDLE
    UPDATE_DELAYED_GCODE ID=hook_idle_tick DURATION=1
    SET_GCODE_VARIABLE MACRO=hook VARIABLE=is_idle VALUE=True
timeout: 600

[gcode_macro hook]
variable_is_idle: False
gcode:

[delayed_gcode hook_idle_tick]
gcode:
    {% if printer["gcode_macro hook"].is_idle and printer.idle_timeout.state != "Idle" %}
        SET_GCODE_VARIABLE MACRO=hook VARIABLE=is_idle VALUE=False
        PRINT_READY
    {% else %}
        UPDATE_DELAYED_GCODE ID=hook_idle_tick DURATION=1
    {% endif %}

# For Cura, must add "Search And Replace" script
# Search: ;LAYER:(\d+)
# Replace: BEFORE_LAYER_CHANGE LAYER=\1\n;LAYER:\1
# Use Regex: True
[gcode_macro BEFORE_LAYER_CHANGE]
gcode:
    PRINT_LAYER_CHANGE LAYER={params.LAYER}


#####################################################################
# Macros
#####################################################################
[gcode_macro G32]
gcode:
    G90 ; absolute positioning
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
    # G0 X150 Y150 Z30 F3600 ; Move nozzle to bed center

[gcode_macro CENTER]
gcode:
    G90
    G0 X150 Y150 Z30 F3600

[gcode_macro PRB_ACCY]
gcode:
    # G0 X185 Y136
    G0 X150 Y131
    PROBE_ACCURACY

[gcode_macro LIGHT_ON]
gcode:
    SET_LED LED=light RED=1.0 GREEN=0.82 BLUE=0.64 # 4000k

[gcode_macro LIGHT_OFF]
gcode:
    SET_LED LED=light RED=0 GREEN=0 BLUE=0

[gcode_macro LIGHT]
gcode:
    {% if printer["neopixel light"].color_data[1].B == 0 %}
        LIGHT_ON
    {% else %}
        LIGHT_OFF
    {% endif %}

# [gcode_macro TEST_1]
# gcode:
#     SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=purge_temp_min VALUE={ (printer.extruder.temperature - 2) | float }

# [gcode_macro TEST_2]
# gcode:
#     M117 { printer["gcode_macro clean_nozzle"].purge_temp_min }


#####################################################################
# Filament
#####################################################################
# [include filament.esun_abs_max.cfg]
[include filament.esun_abs_plus.cfg]


#####################################################################
# Lifecycle (BOOT > READY > START > LAYER_CHANGE > END > IDLE > READY)
#####################################################################
[gcode_macro PRINT_BOOT]
gcode:
    # Index 1 = display, Index 2 and 3 = Knob
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3
    LIGHT_ON


[gcode_macro PRINT_READY]
gcode:
    SET_LED LED=fysetc_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=3


[gcode_macro PRINT_IDLE]
gcode:
    M117 {printer.extruder.temperature - 2 | int}


[gcode_macro PRINT_START]
variable_bed_type: "GDP"
gcode:
    G90 ; Use absolute coordinates
    SET_GCODE_OFFSET Z=0 ; reset z offset

    {% if params.BED_TEMP > 80 %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1
    {% endif %}

    {% if params.BED_TEMP %}
        M140 S{params.BED_TEMP} ; Start bed heating
        M190 S{params.BED_TEMP} # Wait for bed to reach temperature
    {% endif %}

    {% if params.EXTRUDER_TEMP %}
        M109 S{params.EXTRUDER_TEMP} # Set and wait for nozzle to reach temperature
    {% endif %}

    {% if not printer.quad_gantry_level.applied %}
       G32 ; home all axes
    {% endif %}

    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=purge_temp_min VALUE={ (printer.extruder.temperature - 2) | int }
    clean_nozzle
    CALIBRATE_Z
    # G28 Z ; home z axes with clean nozzle
    
    BED_MESH_PROFILE LOAD={bed_type}_{params.BED_TEMP}
    FILAMENT_{bed_type}_PREPARE
    CENTER


[gcode_macro PRINT_LAYER_CHANGE]
gcode:
    FILAMENT_{printer["gcode_macro PRINT_START"].bed_type}_LAYER_CHANGE LAYER={params.LAYER}


[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X290 Y290 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=purge_temp_min VALUE=999

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 58.740
#*# pid_ki = 2.345
#*# pid_kd = 367.857
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.459
#*# pid_ki = 0.736
#*# pid_kd = 91.962
#*#
#*# [stepper_z]
#*# position_endstop = 1.545
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 78.8
#*# shaper_type_y = ei
#*# shaper_freq_y = 38.4
#*#
#*# [bed_mesh GDP_115_2]
#*# version = 1
#*# points =
#*# 	-0.040000, 0.020000, 0.045000, 0.042500, 0.047500, 0.112500, 0.120000, 0.110000, 0.097500, 0.115000, 0.070000, 0.047500, -0.050000, 0.000000, 0.115000, 0.060000
#*# 	-0.042500, 0.017500, 0.085000, 0.020000, 0.025000, 0.057500, 0.085000, 0.025000, 0.057500, 0.075000, -0.005000, -0.065000, -0.047500, 0.005000, 0.062500, 0.060000
#*# 	-0.062500, -0.022500, -0.022500, -0.022500, 0.010000, 0.042500, 0.040000, 0.042500, 0.067500, 0.077500, -0.047500, 0.005000, 0.010000, 0.025000, 0.057500, 0.095000
#*# 	0.000000, -0.025000, -0.025000, 0.007500, -0.020000, -0.020000, 0.002500, 0.070000, 0.052500, 0.022500, -0.010000, 0.072500, 0.047500, 0.105000, 0.122500, 0.095000
#*# 	-0.050000, -0.050000, -0.010000, -0.065000, -0.010000, -0.015000, -0.005000, 0.067500, 0.032500, 0.070000, 0.040000, -0.022500, 0.035000, 0.017500, 0.070000, 0.027500
#*# 	-0.042500, -0.050000, -0.040000, -0.002500, -0.020000, 0.002500, 0.045000, 0.082500, 0.087500, 0.067500, -0.005000, 0.005000, 0.000000, -0.017500, 0.062500, 0.035000
#*# 	-0.010000, -0.065000, -0.047500, 0.007500, 0.015000, 0.012500, 0.060000, 0.122501, 0.117500, 0.087500, 0.072500, 0.077500, 0.007500, -0.015000, 0.000000, 0.032500
#*# 	-0.092500, -0.105000, -0.075000, -0.092500, -0.080000, -0.057500, -0.057500, -0.007500, 0.032500, -0.002501, 0.010000, -0.010001, -0.040000, -0.065000, -0.055000, 0.020000
#*# 	-0.100000, -0.080000, -0.100000, -0.055000, -0.050000, -0.037500, -0.027500, 0.022500, 0.057500, 0.032500, 0.047500, 0.062500, 0.070000, 0.007500, 0.072500, 0.027500
#*# 	-0.122500, -0.082500, -0.117500, -0.057500, -0.090000, -0.095000, -0.052500, -0.052500, 0.020000, 0.025000, 0.037500, -0.002501, 0.010000, 0.015000, -0.005000, -0.017500
#*# 	-0.022500, -0.060000, -0.075000, -0.095000, -0.015000, -0.050000, 0.010000, 0.085000, 0.050000, 0.080000, 0.030000, 0.082500, 0.072500, 0.037500, 0.065000, 0.017500
#*# 	-0.020000, -0.035000, -0.052500, -0.010000, -0.055000, -0.032500, -0.005000, 0.040000, 0.062500, 0.087500, 0.077500, 0.122500, 0.067500, 0.112500, 0.057500, -0.005000
#*# 	-0.020000, -0.015000, -0.090000, -0.070000, -0.017500, -0.005000, 0.070000, 0.045000, 0.090000, 0.020000, 0.077500, 0.072500, 0.072500, -0.007500, 0.040000, 0.010000
#*# 	-0.035000, -0.062500, -0.040000, -0.040000, -0.002500, -0.017500, 0.030000, 0.080000, 0.130000, 0.070000, 0.010000, 0.007500, -0.045000, 0.032500, -0.015000, -0.032500
#*# 	-0.037500, -0.040000, -0.040000, 0.002500, 0.012500, 0.042500, 0.080000, 0.115000, 0.095000, 0.092500, 0.060000, 0.077500, 0.040000, 0.050000, -0.012500, 0.010000
#*# 	0.015000, -0.005000, -0.025000, -0.010000, 0.020000, 0.025000, 0.030000, 0.087500, 0.110000, 0.120000, 0.075000, 0.020000, 0.035000, 0.002500, 0.007500, -0.010000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 16
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 16
#*# max_y = 249.95
#*# mesh_x_pps = 2
#*# max_x = 259.9
#*#
#*# [bed_mesh GDP_115]
#*# version = 1
#*# points =
#*# 	0.035000, 0.015000, 0.035000, 0.027500, 0.055000, 0.080000, 0.045000, 0.027500, 0.017500, 0.017500, -0.007500, -0.037500, 0.010000, 0.042500, 0.032500
#*# 	0.002500, 0.000000, 0.017500, -0.005000, 0.025000, 0.050000, 0.060000, 0.030000, 0.007500, -0.030000, -0.077500, -0.117500, -0.070000, 0.000000, -0.022500
#*# 	-0.035000, 0.000000, 0.032500, 0.010000, 0.000000, 0.015000, 0.037500, 0.075000, 0.022500, -0.025000, -0.030000, -0.075000, -0.042500, -0.002500, -0.012500
#*# 	-0.020000, -0.002500, -0.012500, 0.012500, -0.025000, -0.010000, 0.012500, 0.010000, -0.002500, -0.067500, -0.087500, -0.080000, -0.042500, 0.022500, 0.037500
#*# 	-0.047500, -0.035000, -0.030000, -0.020000, -0.045000, -0.042500, -0.010000, 0.002500, -0.007500, -0.047500, -0.055000, -0.037500, -0.032500, 0.035000, -0.007500
#*# 	-0.030000, -0.015000, -0.015000, 0.002500, -0.002500, 0.025000, 0.065000, 0.092500, 0.060000, 0.002500, -0.045000, -0.057500, -0.052500, -0.015000, 0.010000
#*# 	-0.020000, -0.030000, -0.052500, -0.025000, -0.005000, 0.007500, 0.027500, 0.085000, 0.027500, -0.007500, -0.045000, -0.070000, -0.082500, -0.050000, -0.040000
#*# 	-0.072500, -0.072500, -0.100000, -0.040000, -0.050000, -0.050000, -0.040000, 0.000000, 0.000000, -0.047500, -0.067500, -0.060000, -0.077500, -0.057500, -0.020000
#*# 	-0.060000, -0.057500, -0.055000, -0.040000, -0.027500, -0.027500, -0.000000, 0.032500, 0.030000, 0.020000, -0.015000, -0.027500, 0.022500, 0.005000, -0.032500
#*# 	-0.080000, -0.055000, -0.087500, -0.055000, -0.057500, -0.025000, -0.002500, 0.040000, 0.047500, 0.030000, 0.010000, -0.012500, 0.027500, 0.007500, -0.002500
#*# 	-0.000000, -0.000000, -0.035000, -0.025000, -0.017500, 0.005000, 0.017500, 0.075000, 0.072500, 0.052500, 0.050000, 0.067500, 0.060000, 0.045000, 0.030000
#*# 	-0.047500, -0.042500, -0.047500, -0.060000, -0.002500, 0.017500, 0.030000, 0.047500, 0.055000, -0.000000, -0.002500, -0.027500, -0.012500, 0.035000, -0.030000
#*# 	-0.037500, -0.027500, -0.017500, -0.017500, 0.010000, 0.040000, 0.085000, 0.122500, 0.075000, 0.075000, 0.035000, 0.025000, 0.052500, 0.047500, -0.012500
#*# 	-0.027500, -0.012500, 0.005000, 0.002500, 0.012500, 0.032500, 0.100000, 0.122500, 0.135000, 0.085000, 0.085000, 0.050000, 0.027500, 0.007500, -0.030000
#*# 	-0.030000, -0.020000, -0.020000, -0.007500, 0.010000, 0.035000, 0.082500, 0.110000, 0.125000, 0.125000, 0.105000, 0.057500, 0.027500, 0.012500, -0.017500
#*# tension = 0.2
#*# min_x = 38.0
#*# algo = bicubic
#*# y_count = 15
#*# mesh_y_pps = 2
#*# min_y = 38.0
#*# x_count = 15
#*# max_y = 262.0
#*# mesh_x_pps = 2
#*# max_x = 262.0
